* Chapter 2: Lazy Evaluation and $-Notation

+ Okasaki describes the $-notation, which are primitives for delay and force

** $-notation

+ To suspend an expression ~e~, we do ~$e~
+ The scope of ~$~ extends as far to the right as possible
  + ~$f x~ parses as ~$(f x)~ and not ~$(f) x~
+ ~force~ is integrated with pattern matching (~force~ is automatically invoked)
+ definition of ~force~ operator

#+BEGIN_SRC
fun force($x) = x
#+END_SRC

** Definition of a stream and stream-cell

+ A stream is a suspended stream-cell ~(delay <stream-cell>)~
+ A stream-cell is either ~nil~, or ~(cons <value> <stream>)~
